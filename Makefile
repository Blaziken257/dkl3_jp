.PHONY: all clean compare_roms

BASE_DIR := baserom
BUILD_DIR := build

# Build DKL3
ROM := ${BUILD_DIR}/dkl3_jp.gbc
BASEROM = ${BASE_DIR}/dkl3_jp.gbc
OBJS := $(patsubst %.asm,%.o,$(shell find game/src -type f -name "*.asm")) # Fix this	

# Link objects together to build a rom.
all: $(ROM) compare_roms

# Assemble source files into objects.
# Use rgbasm -h to use halts without nops.
$(OBJS:%.o=${BUILD_DIR}/%.o): $(BUILD_DIR)/%.o : %.asm
	@echo "Assembling" $<
	@mkdir -p $(dir $@)
	@rgbasm -h -o $@ $<

$(ROM): $(OBJS:%.o=${BUILD_DIR}/%.o) $(OBJS:%.o=${BUILD_DIR}/%.o)
	rgblink -n $(ROM:.gbc=.sym) -m $(ROM:.gbc=.map) -O $(BASEROM) -o $@ $^  # Uses -O (overlay) to patch the retail ROM
	rgbfix -v -C -k 01 -l 0x33 -m 0x1B -p 0 -n 0 -r 2 -t "DONKEY KONG" -i "AD3J" $@
	@echo $(ROM)
	
# The compare target is a shortcut to check that the build matches the original roms exactly.
# This is for contributors to make sure a change didn't affect the contents of the rom.
# More thorough comparison can be made by diffing the output of hexdump -C against both roms.
compare_roms: $(ROM) $(BASEROM)
	cmp $^
	
# Remove files generated by the build process.
clean:
	@echo $(ROM)
	rm -f $(ROM) $(OBJS)
